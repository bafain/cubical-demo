module Cubical.PullBack.Properties {‚Ñì} where

open import Cubical.FromStdLib
open import Cubical.PathPrelude

open import Cubical.Equivalence.Properties
open import Cubical.NType.Properties
open import Cubical.PullBack as PB

module _ {A B C D : Set ‚Ñì}
         {f : A ‚Üí D} {g : B ‚Üí D}
         (let open PB.Cone f g)
         (c : C -cone) where
  open _-cone
  open PB.Canonical f g

  private
    p = c .p‚ÇÅ
    q = c .p‚ÇÇ
    H = c .fp‚ÇÅ‚àºgp‚ÇÇ

  unique : isPullBack c ‚âÉ isEquiv _ _ ‚ü® p , q , H ‚ü©
  unique = to , lem3-3-3 (propIsPullBack c) (propIsEquiv ‚ü® p , q , H ‚ü©) to from
    where
      h : ‚àÄ {C'} ‚Üí Homotopy (toCone ùí´ ‚àò (‚ü® p , q , H ‚ü© ‚àò_)) (toCone c {C'})
      h = hid

      to : isPullBack c ‚Üí isEquiv _ _ ‚ü® p , q , H ‚ü©
      to pbc = inverse (lem492 ‚ü® p , q , H ‚ü©) (Œª _ ‚Üí inverse (thm471 _ _ (pbc _)) (prop _))

      from : isEquiv _ _ ‚ü® p , q , H ‚ü© ‚Üí isPullBack c
      from equiv‚ü®p,q‚ü© _ = compEquiv (_ , lem492 ‚ü® p , q , H ‚ü© .fst equiv‚ü®p,q‚ü© _) (_ , prop _) .snd
